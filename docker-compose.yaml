version: "3"

services: 
  rabbitmq:
    image: rabbitmq:3.8.12
    container_name: RabbitMQ
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: 12345
    ports:
        - 5672:5672
        - 15672:15672
    restart: always

  app:
    container_name: app
    build:
      context: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    command: >
      sh -c "cd /app/education &&
             python3 manage.py makemigrations exercises &&
             python3 manage.py migrate &&
             python3 manage.py loaddata test_dump.json &&
             python3 manage.py collectstatic --noinput &&
             python3 manage.py runserver 0.0.0.0:8000 --settings=education.settings_docker"
    links:
      - rabbitmq

  nginx:
    build:
      context: ./frontend
    container_name: Nginx
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    links:
      - app

  celeryworker:
    container_name: CeleryWorker
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    command: >
      sh -c "cd /app/education &&
             DJANGO_SETTINGS_MODULE='education.settings_docker' celery -A education worker --pool=solo"
    links:
      - app

  celerybeat:
    container_name: CeleryBeat
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    command: >
      sh -c "cd /app/education &&
             DJANGO_SETTINGS_MODULE='education.settings_docker' celery -A education beat"
    links:
      - app
 